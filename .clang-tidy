Checks:
  - readability-*
  - portability-*
  - performance-*
  - modernize-*
  - misc-*
  - cppcoreguidelines-*
  - concurrency-*
  - cert-*
  - bugprone-*
  - -misc-include-cleaner # not reliable
  - -llvm-header-guard # #pragma once
  - -llvm-include-order # managed by clang-format
  - -modernize-use-trailing-return-type # TODO
  - -misc-no-recursion # simplifies code
  - -cert-dcl21-cpp # conflicts with not specifying return as const

CheckOptions:
  - { key: readability-identifier-naming.ClassCase, value: CamelCase }
  - { key: readability-identifier-naming.StructCase, value: CamelCase }
  - { key: readability-identifier-naming.MemberCase, value: camelBack }
  - { key: readability-identifier-naming.FunctionCase, value: camelBack }
  - { key: readability-identifier-naming.LocalVariableCase, value: camelBack }
  - { key: readability-identifier-naming.ParameterCase, value: camelBack }
  - { key: readability-identifier-naming.StaticConstantCase, value: CamelCase }
  - { key: readability-identifier-naming.EnumConstantCase, value: CamelCase }
  - { key: readability-identifier-naming.GlobalConstantCase, value: CamelCase }
  - { key: readability-identifier-naming.ConstantMemberCase, value: camelBack }
  - { key: readability-identifier-length.MinimumVariableNameLength, value: 3 }
  - { key: readability-identifier-length.MinimumParameterNameLength, value: 3 }
  - {
      key: readability-identifier-length.IgnoredParameterNames,
      value: "i|j|k|x|y|z|os",
    }
  - {
      key: readability-identifier-length.IgnoredVariableNames,
      value: "i|j|k|x|y|z|os",
    }
